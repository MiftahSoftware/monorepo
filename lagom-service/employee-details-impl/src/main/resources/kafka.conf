kafka.employee-topic.name = "employeesDetail"
kafka.employee-topic.name = ${?EMPLOYEE_TOPIC_NAME}

kafka.employee-topic.group = "employee_group_local"
kafka.employee-topic.group = ${?EMPLOYEE_TOPIC_CONSUMER_GROUP}

akka.kafka.consumer.wakeup-timeout = 20s

lagom.broker.kafka {

  # The name of the Kafka service to look up out of the service locator.
  # If this is an empty string, then a service locator lookup will not be done,
  # and the brokers configuration will be used instead.
  service-name = ""

  # The URLs of the Kafka brokers. Separate each URL with a comma.
  # brokers = ${lagom.broker.defaults.kafka.brokers}

  brokers = "localhost:9093"
  brokers = ${?KAFKA_BOOTSTRAP_SERVERS}

  client {
    default {
      # Exponential backoff for failures
      failure-exponential-backoff {
        # minimum (initial) duration until processor is started again
        # after failure
        min = 3s

        # the exponential back-off is capped to this duration
        max = 30s

        # additional random delay is based on this factor
        random-factor = 0.2
      }
    }

    # configuration used by the Lagom Kafka consumer
    consumer {
      failure-exponential-backoff = ${lagom.broker.kafka.client.default.failure-exponential-backoff}

      # Number of messages batched together by the consumer before the related messages'
      # offsets are committed to Kafka.
      # By increasing the batching-size you are trading speed with the risk of having
      # to re-process a larger number of messages if a failure occurs.
      # The value provided must be strictly greater than zero.
      batching-size = 5

      # Interval of time waited by the consumer before the currently batched messages'
      # offsets are committed to Kafka.
      # This parameter is useful to ensure that messages' offsets are always committed
      # within a fixed amount of time.
      # The value provided must be strictly greater than zero.
      batching-interval = 5 seconds
    }
  }
}